---
- name: Edit /etc/hosts
  template:
    src: hosts.j2
    dest: "/etc/hosts"
    backup: yes

  tags:
    - hosts


- name: Postgesql GPG key
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present
  tags: pg

- name: Postgresql. Upgrade
  shell: echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" | tee  /etc/apt/sources.list.d/pgdg.list
  tags: pg



- name: APT. Update repository cache
  apt: 
    update_cache: yes
  tags:
    - updt



- name: Patroni. Install packages
  apt:
    name: "{{ apt_patroni_packages }}"
    state: latest
  tags:
    - updt

- name: Postgresql. Restart
  service:
      name: postgresql
      state: restarted
      enabled: yes
  tags:
    - done


- name: Create Postgresql replicator User
  shell: psql -p 5433 -c "DROP ROLE IF EXISTS replicator; CREATE USER replicator REPLICATION LOGIN ENCRYPTED PASSWORD 'password';"
  become: yes
  become_user: postgres
  tags:
   - psql

- name: Etcd install
  shell: wget https://github.com/coreos/etcd/releases/download/{{ etcd_version }}/etcd-{{ etcd_version }}-linux-amd64.tar.gz && tar -xvf etcd-{{ etcd_version }}-linux-amd64.tar.gz -C /usr/local/bin/ --strip-components=1

  tags: 
    - etcd


- name: Etcd.service install
  template:
    src: etcd.service.j2
    dest: "/etc/systemd/system/etcd.service"
    backup: yes
  tags:
    - etcd

- name: Etcd.env install
  template:
    src: etcd.env.j2
    dest: "/etc/etcd.env"
    backup: yes
  tags:
    - etcd


- name: etcd_data_dir
  file:
    path: "{{etcd_data_dir}}"
    owner: root
    group: root
    recurse: yes
  tags:
    - etcd



- name: Pip3. Upgrade
  shell: pip3 install --upgrade pip

  tags: pip

- name: Pip3. install psycopg2>=2.5.4
  shell: pip3 install psycopg2>=2.5.4

  tags:
    - pip

#  Pip. Install patroni python-etcd
- name: Pip3. install patroni psycopg2
  shell: pip3 install patroni python-etcd psycopg2

  tags:
    - pip

- name: Copy configuration files for patroni on {{ansible_hostname}}
  template:
    src: patroni.yml.j2
    dest: "/etc/patroni.yml"

  tags:
    - pyml  

- name: Copy patroni.service to /etc/systemd/system/patroni.service
  template:
    src: patroni.service
    dest: "/etc/systemd/system/patroni.service"
    backup: yes
  tags:
    - pyml

- name: Create /data/patroni
  file: 
    path: /data/patroni
    state: directory
    owner: postgres
    group: postgres

### Install haproxy

- name: Apt. Install haproxy
  apt:
    name: haproxy
    state: latest
   
  tags:
     - haproxy

- name: Copy configuration files for haproxy
  template:
    src: haproxy.cfg.j2
    dest: "/etc/haproxy/haproxy.cfg"

  tags:
    - ccf

- name: Restart haproxy
  service:
      name: haproxy
      state: restarted
      enabled: yes
  tags:
    - cfg_haproxy

